---
description: Guidance on Rust-to-TypeScript type bindings via ts-rs used by frontend
---
# Type Bindings (ts-rs)

- Rust models in `src/curius/model.rs` are annotated with `#[derive(TS)]` and `#[ts(export)]` to generate TypeScript types.
- The generated `.ts` bindings are expected under `frontend/src/lib/bindings/` and are imported by the frontend (e.g., `FeedFormat`, `FollowWithOrder`, `Content`, `User`).

Tips:
- Ensure new Rust structs/enums intended for the frontend include `#[serde(rename_all = "camelCase")]` where applicable and `#[ts(export)]`.
- Keep TS types in sync by re-generating bindings when Rust models change.
- In frontend, prefer importing from `frontend/src/lib/bindings/...` rather than redefining interfaces.

